apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: flexliving-reviews-ingress
  namespace: flexliving-reviews
  labels:
    app.kubernetes.io/name: flexliving-reviews-dashboard
    app.kubernetes.io/component: ingress
  annotations:
    # Ingress Controller
    kubernetes.io/ingress.class: "nginx"
    
    # SSL/TLS Configuration
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    cert-manager.io/acme-challenge-type: "http01"
    
    # SSL Redirect
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    
    # Security Headers and Static Asset Caching
    nginx.ingress.kubernetes.io/custom-http-errors: "404,503"
    nginx.ingress.kubernetes.io/server-snippet: |
      add_header X-Frame-Options "DENY" always;
      add_header X-Content-Type-Options "nosniff" always;
      add_header X-XSS-Protection "1; mode=block" always;
      add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
      add_header Referrer-Policy "strict-origin-when-cross-origin" always;
      add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline' fonts.googleapis.com; font-src 'self' fonts.gstatic.com; img-src 'self' data: https:; connect-src 'self' https://api.reviews.flexliving.com wss:; frame-ancestors 'none';" always;
      
      location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
      }
    
    # Rate Limiting
    nginx.ingress.kubernetes.io/rate-limit: "100"
    nginx.ingress.kubernetes.io/rate-limit-window: "1m"
    nginx.ingress.kubernetes.io/rate-limit-connections: "10"
    
    # Load Balancing
    nginx.ingress.kubernetes.io/upstream-hash-by: "$binary_remote_addr"
    nginx.ingress.kubernetes.io/load-balance: "round_robin"
    
    # Timeouts
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "30"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "60"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "60"
    
    # Body Size
    nginx.ingress.kubernetes.io/proxy-body-size: "10m"
    
    # Buffering
    nginx.ingress.kubernetes.io/proxy-buffering: "on"
    nginx.ingress.kubernetes.io/proxy-buffer-size: "4k"
    
    # Health Check
    nginx.ingress.kubernetes.io/health-check-path: "/api/health"
    nginx.ingress.kubernetes.io/health-check-interval: "30s"
    
    # CORS (if needed)
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/cors-allow-origin: "https://reviews.flexliving.com"
    nginx.ingress.kubernetes.io/cors-allow-methods: "GET, POST, PUT, DELETE, OPTIONS"
    nginx.ingress.kubernetes.io/cors-allow-headers: "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization"
    
    # Logging
    nginx.ingress.kubernetes.io/enable-access-log: "true"
    nginx.ingress.kubernetes.io/configuration-snippet: |
      access_log /var/log/nginx/flexliving-reviews.access.log main;
      error_log /var/log/nginx/flexliving-reviews.error.log warn;

spec:
  tls:
  - hosts:
    - reviews.flexliving.com
    - api.reviews.flexliving.com
    secretName: flexliving-reviews-tls
  
  rules:
  # Frontend - Main Dashboard
  - host: reviews.flexliving.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: flexliving-reviews-frontend-service
            port:
              number: 80
  
  # Backend API
  - host: api.reviews.flexliving.com
    http:
      paths:
      # API Routes
      - path: /api
        pathType: Prefix
        backend:
          service:
            name: flexliving-reviews-backend-service
            port:
              number: 80
      
      # Health Check (direct access)
      - path: /health
        pathType: Exact
        backend:
          service:
            name: flexliving-reviews-backend-service
            port:
              number: 80
      
      # Metrics (for monitoring - should be restricted)
      - path: /metrics
        pathType: Exact
        backend:
          service:
            name: flexliving-reviews-backend-service
            port:
              number: 80
---
# Certificate Issuer for Let's Encrypt
apiVersion: cert-manager.io/v1
kind: ClusterIssuer
metadata:
  name: letsencrypt-prod
  labels:
    app.kubernetes.io/name: flexliving-reviews-dashboard
    app.kubernetes.io/component: cert-manager
spec:
  acme:
    server: https://acme-v02.api.letsencrypt.org/directory
    email: devops@flexliving.com
    privateKeySecretRef:
      name: letsencrypt-prod-private-key
    solvers:
    - http01:
        ingress:
          class: nginx
          podTemplate:
            spec:
              nodeSelector:
                kubernetes.io/arch: amd64
    - dns01:
        cloudflare:
          apiTokenSecretRef:
            name: cloudflare-api-token
            key: api-token
      selector:
        dnsNames:
        - "*.reviews.flexliving.com"
---
# Staging Certificate Issuer (for testing)
apiVersion: cert-manager.io/v1
kind: ClusterIssuer
metadata:
  name: letsencrypt-staging
  labels:
    app.kubernetes.io/name: flexliving-reviews-dashboard
    app.kubernetes.io/component: cert-manager
spec:
  acme:
    server: https://acme-staging-v02.api.letsencrypt.org/directory
    email: devops@flexliving.com
    privateKeySecretRef:
      name: letsencrypt-staging-private-key
    solvers:
    - http01:
        ingress:
          class: nginx
---
# Network Policy for Ingress Traffic
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: flexliving-reviews-ingress-policy
  namespace: flexliving-reviews
  labels:
    app.kubernetes.io/name: flexliving-reviews-dashboard
    app.kubernetes.io/component: network-policy
spec:
  podSelector:
    matchLabels:
      app: flexliving-reviews-frontend
  policyTypes:
  - Ingress
  ingress:
  # Allow traffic from ingress controller
  - from:
    - namespaceSelector:
        matchLabels:
          name: ingress-nginx
    ports:
    - protocol: TCP
      port: 3000
---
# Backend Network Policy for API Traffic
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: flexliving-reviews-backend-ingress-policy
  namespace: flexliving-reviews
  labels:
    app.kubernetes.io/name: flexliving-reviews-dashboard
    app.kubernetes.io/component: network-policy
spec:
  podSelector:
    matchLabels:
      app: flexliving-reviews-backend
  policyTypes:
  - Ingress
  ingress:
  # Allow traffic from ingress controller
  - from:
    - namespaceSelector:
        matchLabels:
          name: ingress-nginx
    ports:
    - protocol: TCP
      port: 3001
  
  # Allow traffic from frontend pods
  - from:
    - podSelector:
        matchLabels:
          app: flexliving-reviews-frontend
    ports:
    - protocol: TCP
      port: 3001
  
  # Allow metrics collection from monitoring
  - from:
    - namespaceSelector:
        matchLabels:
          name: monitoring
    ports:
    - protocol: TCP
      port: 3001
---
# Ingress for Monitoring (Prometheus/Grafana)
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: flexliving-reviews-monitoring-ingress
  namespace: flexliving-reviews
  labels:
    app.kubernetes.io/name: flexliving-reviews-dashboard
    app.kubernetes.io/component: monitoring-ingress
  annotations:
    kubernetes.io/ingress.class: "nginx"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    
    # Basic Auth for monitoring endpoints
    nginx.ingress.kubernetes.io/auth-type: basic
    nginx.ingress.kubernetes.io/auth-secret: monitoring-basic-auth
    nginx.ingress.kubernetes.io/auth-realm: "FlexLiving Reviews Monitoring"
    
    # IP Whitelist for monitoring
    nginx.ingress.kubernetes.io/whitelist-source-range: "10.0.0.0/8,172.16.0.0/12,192.168.0.0/16"
spec:
  tls:
  - hosts:
    - monitoring.reviews.flexliving.com
    secretName: monitoring-reviews-tls
  
  rules:
  - host: monitoring.reviews.flexliving.com
    http:
      paths:
      # Backend metrics
      - path: /api/metrics
        pathType: Exact
        backend:
          service:
            name: flexliving-reviews-backend-service
            port:
              number: 80
      
      # Health endpoints
      - path: /api/health/detailed
        pathType: Exact
        backend:
          service:
            name: flexliving-reviews-backend-service
            port:
              number: 80
      
      # Admin endpoints
      - path: /api/admin
        pathType: Prefix
        backend:
          service:
            name: flexliving-reviews-backend-service
            port:
              number: 80
