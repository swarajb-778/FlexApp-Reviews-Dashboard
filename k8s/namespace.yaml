apiVersion: v1
kind: Namespace
metadata:
  name: flexliving-reviews
  labels:
    name: flexliving-reviews
    app.kubernetes.io/name: flexliving-reviews-dashboard
    app.kubernetes.io/component: namespace
    app.kubernetes.io/managed-by: kubectl
    environment: production
    # Pod Security Admission labels (replacement for deprecated PSP)
    pod-security.kubernetes.io/enforce: restricted
    pod-security.kubernetes.io/audit: restricted
    pod-security.kubernetes.io/warn: restricted
  annotations:
    description: "FlexLiving Reviews Dashboard application namespace"
    contact: "devops@flexliving.com"
    # Pod Security Admission version
    pod-security.kubernetes.io/enforce-version: v1.24
    pod-security.kubernetes.io/audit-version: v1.24
    pod-security.kubernetes.io/warn-version: v1.24
---
# Resource Quota for the namespace
apiVersion: v1
kind: ResourceQuota
metadata:
  name: flexliving-reviews-quota
  namespace: flexliving-reviews
spec:
  hard:
    # Compute resources
    requests.cpu: "4"
    requests.memory: 8Gi
    limits.cpu: "8" 
    limits.memory: 16Gi
    
    # Storage resources
    requests.storage: 100Gi
    persistentvolumeclaims: "10"
    
    # Object counts
    pods: "20"
    services: "10"
    secrets: "10"
    configmaps: "10"
    replicationcontrollers: "10"
    
    # Load balancers
    services.loadbalancers: "2"
    services.nodeports: "5"
---
# Limit Range for default resource limits
apiVersion: v1
kind: LimitRange
metadata:
  name: flexliving-reviews-limits
  namespace: flexliving-reviews
spec:
  limits:
  # Default limits for containers
  - default:
      cpu: 500m
      memory: 1Gi
    defaultRequest:
      cpu: 100m
      memory: 256Mi
    type: Container
  
  # Limits for persistent volume claims  
  - max:
      storage: 50Gi
    min:
      storage: 1Gi
    type: PersistentVolumeClaim
---
# Network Policy to control traffic
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: flexliving-reviews-network-policy
  namespace: flexliving-reviews
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress
  
  # Ingress rules
  ingress:
  # Allow ingress from ingress controller
  - from:
    - namespaceSelector:
        matchLabels:
          name: ingress-nginx
    ports:
    - protocol: TCP
      port: 3000  # Frontend
    - protocol: TCP  
      port: 3001  # Backend
  
  # Allow ingress from monitoring
  - from:
    - namespaceSelector:
        matchLabels:
          name: monitoring
    ports:
    - protocol: TCP
      port: 9090  # Metrics
      
  # Allow intra-namespace communication
  - from:
    - namespaceSelector:
        matchLabels:
          name: flexliving-reviews
    ports:
    - protocol: TCP
    - protocol: UDP
  
  # Egress rules  
  egress:
  # Allow DNS
  - to: []
    ports:
    - protocol: UDP
      port: 53
    - protocol: TCP
      port: 53
      
  # Allow HTTPS for external APIs
  - to: []
    ports:
    - protocol: TCP
      port: 443
      
  # Allow HTTP for health checks
  - to: []
    ports:
    - protocol: TCP
      port: 80
      
  # Allow intra-namespace communication  
  - to:
    - namespaceSelector:
        matchLabels:
          name: flexliving-reviews
    ports:
    - protocol: TCP
    - protocol: UDP
---
# Service Account for the application
apiVersion: v1
kind: ServiceAccount
metadata:
  name: flexliving-reviews-sa
  namespace: flexliving-reviews
  labels:
    app.kubernetes.io/name: flexliving-reviews-dashboard
    app.kubernetes.io/component: serviceaccount
  annotations:
    # Example: for AWS IAM role association
    # eks.amazonaws.com/role-arn: arn:aws:iam::ACCOUNT-ID:role/flexliving-reviews-role
automountServiceAccountToken: true
---
# Cluster Role for the service account
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: flexliving-reviews-role
  labels:
    app.kubernetes.io/name: flexliving-reviews-dashboard
    app.kubernetes.io/component: rbac
rules:
# Allow reading nodes for monitoring
- apiGroups: [""]
  resources: ["nodes", "nodes/metrics", "nodes/stats", "nodes/proxy"]
  verbs: ["get", "list"]
  
# Allow reading pods for health checks
- apiGroups: [""]
  resources: ["pods", "pods/logs"]
  verbs: ["get", "list"]
  
# Allow reading services and endpoints
- apiGroups: [""]
  resources: ["services", "endpoints"]
  verbs: ["get", "list"]
---
# Cluster Role Binding
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: flexliving-reviews-binding
  labels:
    app.kubernetes.io/name: flexliving-reviews-dashboard
    app.kubernetes.io/component: rbac
subjects:
- kind: ServiceAccount
  name: flexliving-reviews-sa
  namespace: flexliving-reviews
roleRef:
  kind: ClusterRole
  name: flexliving-reviews-role
  apiGroup: rbac.authorization.k8s.io
