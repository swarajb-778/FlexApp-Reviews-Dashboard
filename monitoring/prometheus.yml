# Prometheus configuration for FlexLiving Reviews Dashboard
global:
  scrape_interval: 15s
  evaluation_interval: 15s

# Alertmanager configuration
alerting:
  alertmanagers:
    - static_configs:
        - targets:
          # Uncomment when alertmanager is deployed
          # - alertmanager:9093

# Load rules once and periodically evaluate them
rule_files:
  - "rules/*.yml"

# Scrape configurations
scrape_configs:
  # Prometheus itself
  - job_name: 'prometheus'
    static_configs:
      - targets: ['localhost:9090']
    scrape_interval: 15s
    metrics_path: /metrics

  # FlexLiving Reviews Backend API
  - job_name: 'flexliving-reviews-backend'
    kubernetes_sd_configs:
      - role: pod
        namespaces:
          names:
            - flexliving-reviews
            - flexliving-reviews-staging
    relabel_configs:
      # Only scrape pods with the app label
      - source_labels: [__meta_kubernetes_pod_label_app]
        action: keep
        regex: flexliving-reviews-backend
      # Set the metrics path
      - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
        action: replace
        target_label: __metrics_path__
        regex: (.+)
      # Set the scrape port
      - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
        action: replace
        regex: ([^:]+)(?::\d+)?;(\d+)
        replacement: $1:$2
        target_label: __address__
      # Add useful labels
      - source_labels: [__meta_kubernetes_pod_name]
        target_label: pod_name
      - source_labels: [__meta_kubernetes_namespace]
        target_label: kubernetes_namespace
      - source_labels: [__meta_kubernetes_pod_node_name]
        target_label: kubernetes_node
    scrape_interval: 10s
    metrics_path: /metrics

  # Alternative static configuration for backend (when K8s SD is not available)
  # - job_name: 'flexliving-reviews-backend-static'
  #   static_configs:
  #     - targets: 
  #       - 'flexliving-reviews-backend-service:9090'  # Production
  #       - 'localhost:9090'                           # Development
  #   scrape_interval: 10s
  #   metrics_path: /metrics

  # Redis monitoring
  - job_name: 'redis'
    kubernetes_sd_configs:
      - role: service
        namespaces:
          names:
            - flexliving-reviews
            - flexliving-reviews-staging
    relabel_configs:
      - source_labels: [__meta_kubernetes_service_name]
        action: keep
        regex: redis
      - source_labels: [__meta_kubernetes_service_port_name]
        action: keep
        regex: redis-exporter
      - source_labels: [__meta_kubernetes_namespace]
        target_label: kubernetes_namespace
    scrape_interval: 30s
    metrics_path: /metrics

  # Alternative static Redis configuration
  # - job_name: 'redis-static'
  #   static_configs:
  #     - targets: ['redis:9121']
  #   scrape_interval: 30s
  #   metrics_path: /metrics

  # PostgreSQL monitoring (if postgres_exporter is deployed)
  - job_name: 'postgres'
    kubernetes_sd_configs:
      - role: service
        namespaces:
          names:
            - flexliving-reviews
            - flexliving-reviews-staging
    relabel_configs:
      - source_labels: [__meta_kubernetes_service_name]
        action: keep
        regex: postgres
      - source_labels: [__meta_kubernetes_service_port_name]
        action: keep
        regex: postgres-exporter
      - source_labels: [__meta_kubernetes_namespace]
        target_label: kubernetes_namespace
    scrape_interval: 30s
    metrics_path: /metrics

  # Node Exporter for system metrics
  - job_name: 'node-exporter'
    kubernetes_sd_configs:
      - role: pod
        namespaces:
          names:
            - kube-system
            - monitoring
    relabel_configs:
      - source_labels: [__meta_kubernetes_pod_label_app]
        action: keep
        regex: node-exporter
      - source_labels: [__meta_kubernetes_pod_node_name]
        target_label: kubernetes_node
    scrape_interval: 30s

  # Kubernetes API server metrics
  - job_name: 'kube-apiserver'
    kubernetes_sd_configs:
      - role: endpoints
        namespaces:
          names:
            - default
    relabel_configs:
      - source_labels: [__meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]
        action: keep
        regex: kubernetes;https
    scheme: https
    tls_config:
      ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
    scrape_interval: 30s

  # Kubernetes kubelet metrics
  - job_name: 'kubelet'
    kubernetes_sd_configs:
      - role: node
    relabel_configs:
      - action: labelmap
        regex: __meta_kubernetes_node_label_(.+)
      - target_label: __address__
        replacement: kubernetes.default.svc:443
      - source_labels: [__meta_kubernetes_node_name]
        regex: (.+)
        target_label: __metrics_path__
        replacement: /api/v1/nodes/${1}/proxy/metrics
    scheme: https
    tls_config:
      ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
    scrape_interval: 30s

  # cAdvisor metrics for container monitoring
  - job_name: 'cadvisor'
    kubernetes_sd_configs:
      - role: node
    relabel_configs:
      - action: labelmap
        regex: __meta_kubernetes_node_label_(.+)
      - target_label: __address__
        replacement: kubernetes.default.svc:443
      - source_labels: [__meta_kubernetes_node_name]
        regex: (.+)
        target_label: __metrics_path__
        replacement: /api/v1/nodes/${1}/proxy/metrics/cadvisor
    scheme: https
    tls_config:
      ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
    scrape_interval: 30s

# Remote write configuration (optional - for long-term storage)
# remote_write:
#   - url: "https://prometheus-remote-write.example.com/api/v1/write"
#     basic_auth:
#       username: "username"
#       password: "password"

# Storage configuration
storage:
  tsdb:
    retention.time: 7d
    retention.size: 50GB
    path: /prometheus/data
